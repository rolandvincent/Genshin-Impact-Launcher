<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style TargetType="UserControl"
           x:Key="UserControlTheme">
        <Setter Property="Foreground"
                Value="#333"></Setter>
        <Setter Property="FontFamily"
                Value="Bahnscrift" />
        <Setter Property="FontSize"
                Value="14" />
    </Style>
    
    <!-- Focus -->

    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               Stroke="{DynamicResource WindowSecondaryForegroundBrush}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
        <!--<Setter Property="FocusVisualStyle"
                Value="{DynamicResource FocusVisual}" />-->
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            BorderThickness="1"
                            SnapsToDevicePixels="true"
                            Background="{DynamicResource ScrollBar.Static.Background}"
                            BorderBrush="{DynamicResource ScrollBar.Static.Border}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{DynamicResource ScrollBar.MouseOver.Background}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ScrollBar.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{DynamicResource ScrollBar.Pressed.Background}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ScrollBar.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.56" />
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{DynamicResource ScrollBar.Disabled.Background}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ScrollBar.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle"
                               SnapsToDevicePixels="True"
                               Fill="{DynamicResource ScrollBar.Static.Thumb}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="rectangle"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="rectangle"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle"
                               SnapsToDevicePixels="True"
                               Fill="{DynamicResource ScrollBar.Static.Thumb}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="rectangle"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="rectangle"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CScrollBar"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false" />
        <Setter Property="Background"
                Value="{DynamicResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1,0" />
        <Setter Property="Width"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Row="1"
                                CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <RepeatButton x:Name="PART_LineUpButton"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{DynamicResource ScrollBarButton}">
                            <Path x:Name="ArrowTop"
                                  Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                  Stretch="Uniform"
                                  Margin="3,4,3,3"
                                  Fill="{DynamicResource ScrollBar.Static.Glyph}" />
                        </RepeatButton>
                        <Track x:Name="PART_Track"
                               IsDirectionReversed="true"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{DynamicResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{DynamicResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Grid.Row="2"
                                      Style="{DynamicResource ScrollBarButton}">
                            <Path x:Name="ArrowBottom"
                                  Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                  Stretch="Uniform"
                                  Margin="3,4,3,3"
                                  Fill="{DynamicResource ScrollBar.Static.Glyph}" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsMouseOver}"
                                           Value="true" />
                                <Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsPressed}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsMouseOver}"
                                           Value="true" />
                                <Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsPressed}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsMouseOver}"
                                           Value="true" />
                                <Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsPressed}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsMouseOver}"
                                           Value="true" />
                                <Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsPressed}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="ArrowTop"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                            <Setter TargetName="ArrowBottom"
                                    Property="Fill"
                                    Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="MinWidth"
                        Value="0" />
                <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness"
                        Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        Grid.Column="1"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}" />
                                <RepeatButton x:Name="PART_LineLeftButton"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource ScrollBarButton}">
                                    <Path x:Name="ArrowLeft"
                                          Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                          Stretch="Uniform"
                                          Margin="3"
                                          Fill="{DynamicResource ScrollBar.Static.Glyph}" />
                                </RepeatButton>
                                <Track x:Name="PART_Track"
                                       Grid.Column="1"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{DynamicResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{DynamicResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton"
                                              Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource ScrollBarButton}">
                                    <Path x:Name="ArrowRight"
                                          Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                          Stretch="Uniform"
                                          Margin="3"
                                          Fill="{DynamicResource ScrollBar.Static.Glyph}" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsMouseOver}"
                                                   Value="true" />
                                        <Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsPressed}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight"
                                            Property="Fill"
                                            Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsMouseOver}"
                                                   Value="true" />
                                        <Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsPressed}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft"
                                            Property="Fill"
                                            Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsMouseOver}"
                                                   Value="true" />
                                        <Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsPressed}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight"
                                            Property="Fill"
                                            Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsMouseOver}"
                                                   Value="true" />
                                        <Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsPressed}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft"
                                            Property="Fill"
                                            Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter TargetName="ArrowLeft"
                                            Property="Fill"
                                            Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                                    <Setter TargetName="ArrowRight"
                                            Property="Fill"
                                            Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CScrollView"
           TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid"
                          Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner"
                                   Grid.Column="1"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                   Grid.Row="1" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                Grid.Row="0" />
                        <ScrollBar Style="{DynamicResource CScrollBar}"
                                   x:Name="PART_VerticalScrollBar"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Grid.Row="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                        <ScrollBar Style="{DynamicResource CScrollBar}"
                                   x:Name="PART_HorizontalScrollBar"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Grid.Column="0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" />
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <!--Controls-->
    <Style TargetType="{x:Type Control}">
        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource MyFocusVisual}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource Bahnscrift}" />
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}"></Setter>
        <Setter Property="FontFamily"
                Value="{DynamicResource Bahnscrift}"></Setter>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}"></Setter>
        <Setter Property="FontFamily"
                Value="{DynamicResource Bahnscrift}"></Setter>
    </Style>


    <Style TargetType="TextBox">
        <Setter Property="SelectionBrush"
                Value="{DynamicResource WindowSecondaryForegroundBrush}"></Setter>
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}"></Setter>
        <Setter Property="CaretBrush"
                Value="{DynamicResource WindowSecondaryForegroundBrush}"></Setter>
        <Setter Property="Template">
            
            <Setter.Value>
                <ControlTemplate>
                    <Border Name="Border"
                            CornerRadius="3"
                            Padding="2 1"
                            BorderBrush="{DynamicResource ControlsGrayBrush}"
                            Background="{DynamicResource ControlBackgroudBrush}"
                            BorderThickness="1">
                        <ScrollViewer Margin="0"
                                      VerticalScrollBarVisibility="Auto"
                                      x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource WindowSecondaryForegroundBrush}"
                                    TargetName="Border"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton"
                     TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{DynamicResource ControlBackgroudBrush}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="3"
                    BorderThickness="1 1 1 1" />
            <Border x:Name="BorderOutside"
                    Grid.Column="0"
                    CornerRadius="0"
                    Margin="1"
                    Background="{DynamicResource ControlBackgroudBrush}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Fill="{TemplateBinding BorderBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked"
                     Value="true">
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="{DynamicResource WindowSecondaryForegroundBrush}" />
                <Setter TargetName="BorderOutside"
                        Property="BorderBrush"
                        Value="{DynamicResource WindowSecondaryForegroundBrush}" />
            </Trigger>

            <!--<Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBoxTextBox"
                     TargetType="{x:Type TextBox}">
        
    </ControlTemplate>
        
    <Style TargetType="ComboBox">
        <Setter Property="FrameworkElement.OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="Transparent">
                        <ToggleButton Name="ToggleButton"
                                      Template="{DynamicResource ComboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      BorderBrush="{DynamicResource ControlsGrayBrush}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3,3,23,3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{DynamicResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Background="{DynamicResource ControlBackgroudBrush}"
                                 Foreground="{DynamicResource WindowForegroundBrush}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource ControlBackgroudBrush}"
                                        BorderThickness="1"
                                        CornerRadius="3"
                                        BorderBrush="{DynamicResource ControlsGrayBrush}" />
                                <ScrollViewer Margin="4,6,4,6"
                                              Style="{DynamicResource CScrollView}"
                                              SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="ToggleButton"
                                    Value="{DynamicResource WindowSecondaryForegroundBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ToggleButton"
                                    Value="{DynamicResource WindowSecondaryForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="UploadButton">
        <Setter Property="Background"
                Value="{DynamicResource ControlBackgroudBrush}"></Setter>
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}"></Setter>
        <Setter Property="BorderBrush"
                Value="{DynamicResource ControlsGrayBrush}"></Setter>
        <Setter Property="FontFamily"
                Value="{DynamicResource Bahnscrift}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="btn"
                                Background="{TemplateBinding Background}"
                                CornerRadius="3 0 0 3"
                                HorizontalAlignment="Stretch"
                                BorderBrush="{DynamicResource ControlsGrayBrush}"
                                BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"></ContentPresenter>
                        </Border>
                        <Border x:Name="txt"
                                Background="#5000"
                                CornerRadius="0 3 3 0"
                                HorizontalAlignment="Stretch"
                                Grid.Column="1"
                                BorderBrush="{DynamicResource ControlsGrayBrush}"
                                BorderThickness="0 1 1 1">
                            <TextBlock HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Padding="5 0"
                                       Foreground="{DynamicResource WindowForegroundBrush}"
                                       TextTrimming="CharacterEllipsis"
                                       Text="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"></TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{DynamicResource ControlMouseHoverBrush}"></Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{DynamicResource ControlIsPressedBrush}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ControlMouseHoverBrush}"></Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="btn"
                                    Value="{DynamicResource WindowSecondaryForegroundBrush}"></Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="txt"
                                    Value="{DynamicResource WindowSecondaryForegroundBrush}"></Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background"
                Value="{DynamicResource ControlBackgroudBrush}"></Setter>
        <Setter Property="BorderBrush"
                Value="{DynamicResource ControlsGrayBrush}"></Setter>
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding Path=Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource ControlMouseHoverBrush}"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource WindowSecondaryForegroundBrush}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource ControlIsPressedBrush}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ControlMouseHoverBrush}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Validation -->

    <ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <TextBlock Foreground="Red"
                       FontSize="25"
                       Text="*"
                       DockPanel.Dock="Right">
            </TextBlock>
            <AdornedElementPlaceholder />
        </DockPanel>
    </ControlTemplate>

    <Style x:Key="InputControlErrors"
           TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},    
                              Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Context Menu -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="{DynamicResource MenuPopupBrush}"
                            BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Padding"
                                    Value="0,3,0,3" />
                            <Setter TargetName="Border"
                                    Property="CornerRadius"
                                    Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Bd"
                            Padding="17,0,17,0"
                            BorderThickness="0"
                            CornerRadius="2"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            Uid="Border_38">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Header}"
                                          Grid.Column="1"
                                          ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Uid="ContentPresenter_33" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#CFFF" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource WindowBackgroudBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>